name: neither
version: 0.3.0
id: neither-0.3.0-c2b1cd63ff0dfb7503c61f5586d71566
license: BSD3
copyright:
maintainer: Michael Snoyman <michael@snoyman.com>
stability: Stable
homepage: http://github.com/snoyberg/neither
package-url:
description: The standard Either datatype suffers from a lack of monad and applicative instances. To make matters worse, the mtl and transformers packages provide orphan instances which conflict with each other, as well as defining a transformer version which has an usually unnecessary superclass constraint.
             .
             Besides these annoyances, there is another issue: there exist two reasonable definitions of the Applicative instance for Either: one the holds onto only the first Left value, or one that appends all Left values together via a Monoid instance. The former is compatible with the monad instance, while the latter is not.
             .
             This package defines three datatypes, some helpers functions and instances. The data types are AEither, MEither and MEitherT. AEither provides an Applicative instance which appends Left values, MEither provides the monadic definition, and MEitherT is a monad transformer.
category: Data
author: Michael Snoyman <michael@snoyman.com>
exposed: True
exposed-modules: Data.Neither
hidden-modules:
import-dirs: /home/george/todo/todohs/cabal-dev//lib/neither-0.3.0/ghc-7.0.3
library-dirs: /home/george/todo/todohs/cabal-dev//lib/neither-0.3.0/ghc-7.0.3
hs-libraries: HSneither-0.3.0
extra-libraries:
extra-ghci-libraries:
include-dirs:
includes:
depends: base-4.3.1.0-c33a1741503ded8a0170884e8a2e4fa2
         failure-0.1.0.1-1e2c316f45539a57864e2c665a836499
         transformers-0.2.2.0-4bbbfde1fb5c4eb17cdb1963dda698f3
hugs-options:
cc-options:
ld-options:
framework-dirs:
frameworks:
haddock-interfaces: /home/george/todo/todohs/cabal-dev//share/doc/neither-0.3.0/html/neither.haddock
haddock-html: /home/george/todo/todohs/cabal-dev//share/doc/neither-0.3.0/html
